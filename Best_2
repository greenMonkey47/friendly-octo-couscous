clc
clear all
close all

%% Cut Detection and Path Optimization

disp('Loading Data....')

load AllData
outwidth_all = [400 350 350 570 496 572 496 534 350 490 490 350 572];

idx_video = 2;
fps = AllData{idx_video}.fps;
Data = AllData{idx_video}.Data;
resolution = AllData{idx_video}.resolution;

AR = 4/3;  % Required Aspect Ratio

l = min([length(Data{1}(:,1)) length(Data{2}(:,1)) length(Data{3}(:,1)) length(Data{4}(:,1)) length(Data{5}(:,1)) length(Data{6}(:,1)) ]);
L = AllData{idx_video}.NoofFrames;
delta = floor(abs(l-L))/2;
st = 1;
ed = l;
% st=2001;ed=3000;
AData = [Data{1}(st:ed,1) Data{2}(st:ed,1) Data{3}(st:ed,1) Data{4}(st:ed,1) Data{5}(st:ed,1) Data{6}(st:ed,1)];

l = length(AData);
data = median(AData(:,[1 2 3])');
data = data';
% data(4515:4556) = data(4514,1);
% data(4460:4464) = data(4459,1);
% data(2631:2665) = data(2630,1);
% data(2665:2700) = data(2660,1);
figure;
clr = 'rgbkyc'
for i=1:6
    plot(AData(:,i),clr(i));
    hold on
end
legend('m','n','o','c','d','u' );

% out_width = AllData{idx_video}.resolution(2) * AR;
out_width = outwidth_all(idx_video) * AR;
size_data = size(data,1);
cut_dist = round(0.8*(out_width)); %was 150

%% Finding cuts in gaze data
% disp('Cut Detection using CVX...')
% 
N = size(data,1);
s_skip = 3;      % s-skip distance
fixtime = 24;    % Fixation time
k=30 ;      % no more than 1 cut in k frames
% tic
cuts_cvx = cut_detect_cvx(data,cut_dist,s_skip,fixtime,k);
% toc
figure,
%subplot(211)
plot(data,'.b')
hold on;
scatter(cuts_cvx,data(cuts_cvx),20,'*r')
% plot(abs(D1*data))
% plot(1:3600,ones(3600,1)*l2,'-k');
% plot(n3+1:N-n3,abs(D4*data.*(x(n3+1:N-n3))),'-m');
% plot(n3+1:N-n3,abs(D4*data),'-g');
% plot(n3+1:N-n3,abs(D4*data).*(x(n3+1:N-n3)) + (1-x(n3+1:N-n3))*(l2)-l2,'-g')
axis([0 l 0 1366])


%% DP
disp('Cut Detection using DP ....! ')
tic
% flag:{1-DP on all data, 0-DP on median}
[cuts_dp,dp_output,img,c1,cuts21] = cut_detect_DP(data,out_width,k,15,200,cut_dist,AData,1);
[cuts_dp_2,dp_output_2,img_2,c2,cuts22] = cut_detect_DP(data,out_width,k,15,100,cut_dist,AData,0);

toc



scatter(cuts_dp,dp_output(cuts_dp),20,'ok');
% scatter(cuts21,dp_output(cuts21),20,'+r');
% scatter(c1,dp_output(c1),20,'*r');

scatter(cuts_dp_2,dp_output_2(cuts_dp_2),20,'or');
% scatter(cuts22,dp_output_2(cuts22),20,'+k');
% scatter(c2,dp_output_2(c2),20,'*b');

plot(dp_output,'-k');
legend('with all users')
% plot(dp_output_2,'-g');
% legend('with Median')

% plot(temp(:,1),'-g')
% plot(temp(:,2),'-m');
% plot(temp(:,3),'-k');

img2 = img(size(img,1):-1:1,:);
img2 = imresize(img2,[1366 l]);
figure,imshow(img2,[])



%% Path Optimization

% load original cuts
A = importdata(['./Videos/Original_Cuts/' AllData{idx_video}.filename(1:end-4) '_shots.txt'], ' ');
cuts_org = A(:,1);
cuts = cuts_dp;
bool = ones(N,4);
tbool = zeros(N,1);
%% generate bool variables
% for original cuts

% [dp_output_smooth,L2_cuts]= smooth_DP(cuts21,c1,dp_output,out_width,bool) ; 


bool(cuts_org(1):cuts_org(1)+s_skip,1) = 0;
tbool(cuts_org(1)) = 1;
for i=2:length(cuts_org)
        bool(cuts_org(i):cuts_org(i)+s_skip,1) = 0;
        bool(cuts_org(i):cuts_org(i),2) = 0;
        bool(cuts_org(i)-1:cuts_org(i),3) = 0;
        bool(cuts_org(i)-2:cuts_org(i),4) = 0;
        tbool(cuts_org(i)) = 1;
end
% for detected cuts
for i=1:length(cuts)
    if cuts(i)>3
        bool(cuts(i):cuts(i)+s_skip,1) = 0;
        bool(cuts(i):cuts(i),2) = 0;
        bool(cuts(i)-1:cuts(i),3) = 0;
        bool(cuts(i)-2:cuts(i),4) = 0;
        tbool(cuts(i)) = 1;
    end
end
bool(1:10,1) = 0;
bool(l-3:l,[0 2 3]+1) = 0;
bool(l-3:l,1) = 1;
bool = bool(1:l,:);




lambda0 = 0.005;
lambda1 = 100;
lambda2 = 0;
lambda3 = 30;
vc1 = 6;
vc2 = 3;

thresh = out_width*0.25;
% tic
% [opt_data,temp1, temp2]=path_optimization_cvx(data,bool,tbool,lambda0,lambda1,lambda2,lambda3,vc1,vc2,thresh,out_width);
% toc
tic
[opt_data_dp,temp1_dp, temp2_dp]=path_optimization_cvx(dp_output,bool,tbool,lambda0,lambda1,lambda2,lambda3,vc1,vc2,thresh,out_width);
toc



figure,
%subplot(211)
plot(data,'.b')
hold on;
plot(dp_output,'-k')
axis([0 l 0 1366])
scatter(cuts_dp,dp_output(cuts_dp),20,'ok');

% plot(opt_data,'-g')
plot(opt_data_dp,'-r')
legend('Gaze Data', 'Track')

% subplot(212);
% plot(temp1,'-b')
% hold on
% plot(temp2,'-r')
% 
% plot(temp1_dp,'.k')
% hold on
% plot(temp2_dp,'.m')
% 
% axis([0 l 0 6])


fileID = fopen(['./generateCroppedVideo/opt_path/' AllData{idx_video}.filename(1:end-4) '_optpath.txt'],'w');
fprintf(fileID,'%f \n',opt_data_dp');
fclose(fileID);